# Import Modules

```{python}
import polars as pl
```
# Initialise Parameters

```{python}
#| tags: [parameters]
data_dir = "data"
trips_url = "https://s3.amazonaws.com/tripdata/202403-citibike-tripdata.csv.zip"
trips_filename = "202403-citibike-tripdata.csv.zip"
geojson_url = "https://raw.githubusercontent.com/HodgesWardElliott/custom-nyc-neighborhoods/refs/heads/master/custom-pedia-cities-nyc-Mar2018.geojson"
geojson_filename = "nyc-neighbourhoods.geojson"
```

# Trips

## Download Trips Data

```{python}
# Download the zip file
!curl -L -o {data_dir}/{trips_filename} {url}

# Unzip the file
!unzip -d {data_dir} {data_dir}/{trips_filename}

# Remove the zip file
!rm {data_dir}/{trips_filename}
```

## View Trips Data

```{python}
# Get the CSV filename (remove .zip extension)
csv_trips_filename = trips_filename.replace('.csv.zip', '.csv')
!wc -l {data_dir}/{csv_trips_filename}
!head -n 6 {data_dir}/{csv_trips_filename}
```

## Load Trips Data as Polars DataFrame

```{python}
trips = pl.read_csv(
    f"{data_dir}/{csv_trips_filename}", 
    try_parse_dates=True,
    schema_overrides={
        "start_station_id": pl.String,
        "end_station_id": pl.String
    },
).sort(
    "started_at"
)
```

## Inspect Trips Data

```{python}
print(type(trips))
print(trips.describe())
```

```{python}
print(trips[:, :4])
print(trips[:, 4:8])
print(trips[:, 8:])
```

## Save Trips DataFrame as Parquet File

```{python}
# Save with same base filename but .parquet extension
parquet_trips_filename = trips_filename.replace('.zip', '.parquet')
trips.write_parquet(f'data/{parquet_trips_filename}')
```

# Neighbourhoods

## Download GeoJSON File
```{python}
# Download the GeoJSON file
!curl -L -o data/{geojson_filename} {geojson_url}

!python -m json.tool data/{geojson_filename}
```

## Convert GeoJSON to Polars DataFrame
```{python}
neighbourhoods = (
    pl.read_json(f"data/{geojson_filename}")
    .select("features")
    .explode("features")
    .unnest("features")
    .unnest("properties")
    .select("neighborhood", "borough", "geometry")
    .unnest("geometry")
    .with_columns(polygon=pl.col("coordinates").list.first())
    .select("neighborhood", "borough", "polygon")
    .filter(pl.col("borough") != "Staten Island")
    .sort("neighborhood")
)
```
## Inspect Neighbourhoods DataFrame
```{python}
neighbourhoods.describe()
```

## Save Neighbourhoods as Parquet File

```{python}
# Create the Parquet filename by replacing .geojson with .parquet
neighbourhoods_parquet_filename = f"data/{geojson_filename.replace('.geojson', '.parquet')}"

# Save the DataFrame as a Parquet file
neighbourhoods.write_parquet(neighbourhoods_parquet_filename)
```

# Display File Sizes

CSV (547M) vs Parquet (93M)

GeoJSON (1.5M) vs Parquet (357K)

```{python}
!ls -lh data/*.csv data/*.geojson data/*.parquet
```